{
  "openapi": "3.0.3",
  "info": {
    "title": "Daily Water Intake Tracker",
    "description": "The \"Daily Water Intake Tracker\" app helps users ensure their bodies receive an adequate amount of water each day. With this app, you can easily track your hydration level.\n  \n  Key Features\n\n  1) Personal Profile Creation:  The app allows users to create their own profile, where they can input individual characteristics such as gender, weight, physical activity, for accurate calculation of water intake requirements.\n    \n  2) Water Intake Tracking:  Users can easily monitor the amount of water they have consumed throughout the day using the app's convenient interface.\n    \n  3) Statistical Analysis: Users can view their water intake statistics on a monthly basis to track their progress and identify trends.\n    \n  This app serves as a reliable companion in maintaining a healthy lifestyle, reminding users of the importance of proper hydration for optimal body function.",
    "contact": {
      "email": "leonovserhii89@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints for user authentication and authorization"
    },
    {
      "name": "Users",
      "description": "Endpoints for managing user information"
    },
    {
      "name": "Water Tracking",
      "description": "Endpoints for tracking water consumption"
    },
    {
      "name": "Google Authentication",
      "description": "Endpoints for Google OAuth integration"
    }
  ],

  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Register a new user with email verification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAlreadyInUse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Verify email address",
        "description": "Verify a user's email address using a verification token",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "User successfully verified"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Resend verification email",
        "description": "Resend the email verification link",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationEmailSentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login a user",
        "description": "Authenticate user with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "description": "Logout the currently authenticated user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User successfully logged out"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/forgot-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Forgot password",
        "description": "Send a password reset token to the user's email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset token sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/reset-password/{otp}": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Reset password",
        "description": "Reset the user's password using the provided OTP",
        "parameters": [
          {
            "name": "otp",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordHasBeenUpdatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error or token has expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "description": "Refresh the access token using a refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update access and refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403": {
            "description": "Token inactive",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "description": "Retrieve information of the currently authenticated user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/all": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve information for all users",
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllUsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user avatar",
        "description": "Upload and update the user's avatar",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadAvatar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user information",
        "description": "Update the authenticated user's information",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/notify-to-verify": {
      "get": {
        "tags": ["Users"],
        "summary": "Notify user to verify email",
        "description": "Send a notification to the user to verify their email address",
        "responses": {
          "200": {
            "description": "Notification page"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/water/add": {
      "post": {
        "tags": ["Water Tracking"],
        "summary": "Add water consumption",
        "description": "Add the amount of water you drink",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Water consumption added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/water/edit": {
      "put": {
        "tags": ["Water Tracking"],
        "summary": "Edit water consumption",
        "description": "Edit the amount of water consumed by the user",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWaterData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water consumption edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditOrDeleteWaterDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/water/delete": {
      "put": {
        "tags": ["Water Tracking"],
        "summary": "Delete water consumption record",
        "description": "Remove a water consumption record",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWaterData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water consumption record deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditOrDeleteWaterDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/water/daily_track": {
      "get": {
        "tags": ["Water Tracking"],
        "summary": "Get daily water consumption",
        "description": "Retrieve the logged water consumption for the current day",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Water consumption record deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyTrackResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": ["Water Tracking"],
        "summary": "Get monthly water consumption",
        "description": "Retrieve the logged water consumption for the current month",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Monthly water consumption retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyTrackResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Google Authentication"],
        "summary": "Google OAuth",
        "description": "Redirect to Google for authentication",
        "responses": {
          "302": {
            "description": "Redirecting to Google"
          }
        }
      }
    },
    "/auth/google-redirect": {
      "get": {
        "tags": ["Google Authentication"],
        "summary": "Google OAuth redirect",
        "description": "Handle Google OAuth redirect",
        "responses": {
          "200": {
            "description": "User authenticated via Google"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "SignupUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Password123@"
          }
        },
        "required": ["email", "password"]
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jonh"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          }
        }
      },
      "VerificationEmailSentResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Verification email sent"
          }
        }
      },
      "EmailUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          }
        },
        "required": ["email"]
      },
      "ForgotResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "Password reset instructions sent by email"
          }
        },
        "required": ["email"]
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Password123@"
          }
        },
        "required": ["email", "password"]
      },
      "LoginUserResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NDllMTYwZDBhYjhjY2RmZjI1YmY3MyIsImlhdCI6MTcxNjExODI3MSwiZXhwIjoxNzE2MTIwMDcxfQ.A7x3fwZ4zIETdShTeux1lyKeXZ6WKo9ps6WZBVW4KSg"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NDllMTYwZDBhYjhjY2RmZjI1YmY3MyIsImlhdCI6MTcxNjExODI3MSwiZXhwIjoxNzE2MTIwMDcxfQ.A7x3fwZ4zIETdShTeux1lyKeXZ6WKo9ps6WZBVW4KSg"
          },
          "user": {
            "type": "object",
            "example": {
              "name": {
                "type": "string",
                "example": "Jonh"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "user@example.com"
              },
              "avatar": {
                "type": "string",
                "example": "https://gravatar.com/avatar/36641900b38575ca2a94c3998bb376a4.jpg?d=robohash"
              },
              "gender": {
                "type": "boolean"
              },
              "weight": {
                "oneOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "example": 75
              },
              "sportTime": {
                "oneOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "example": 2
              },
              "dailyWater": {
                "type": "integer",
                "example": 1.5
              }
            }
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Error description"
          }
        }
      },
      "PasswordUser": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "format": "password",
            "example": "Newpassword123@"
          }
        },
        "required": ["password"]
      },
      "PasswordHasBeenUpdatedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Password has been updated"
          }
        },
        "required": ["password"]
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NDllMTYwZDBhYjhjY2RmZjI1YmY3MyIsImlhdCI6MTcxNjExODI3MSwiZXhwIjoxNzE2NzIzMDcxfQ.HDUbzJp9JoTyXOefIGhbQymEWx_CTSc6BhRkIeDbYnM"
          }
        },
        "required": ["refreshToken"]
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NDllMTYwZDBhYjhjY2RmZjI1YmY3MyIsImlhdCI6MTcxNjExODI3MSwiZXhwIjoxNzE2NzIzMDcxfQ.HDUbzJp9JoTyXOefIGhbQymEWx_CTSc6BhRkIeDbYnM"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NDllMTYwZDBhYjhjY2RmZjI1YmY3MyIsImlhdCI6MTcxNjExODI3MSwiZXhwIjoxNzE2NzIzMDcxfQ.HDUbzJp9JoTyXOefIGhbQymEWx_CTSc6BhRkIeDbYnM"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jonh"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "avatar": {
            "type": "string",
            "example": "https://gravatar.com/avatar/36641900b38575ca2a94c3998bb376a4.jpg?d=robohash"
          },
          "gender": {
            "type": "boolean"
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "example": 75
          },
          "sportTime": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "example": 2
          },
          "dailyWater": {
            "type": "integer",
            "example": 1.5
          }
        }
      },
      "AllUsersResponse": {
        "type": "object",
        "properties": {
          "allUsers": {
            "type": "integer",
            "example": 18
          }
        }
      },
      "UploadAvatar": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "example": "https://gravatar.com/avatar/36641900b38575ca2a94c3998bb376a4.jpg?d=robohash"
          }
        },
        "required": ["avatarURL"]
      },
      "UploadAvatarResponse": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "example": "https://gravatar.com/avatar/36641900b38575ca2a94c3998bb376a4.jpg?d=robohash"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jonh"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "avatar": {
            "type": "string",
            "example": "https://gravatar.com/avatar/36641900b38575ca2a94c3998bb376a4.jpg?d=robohash"
          },
          "gender": {
            "type": "boolean"
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "example": 75
          },
          "sportTime": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "example": 2
          },
          "dailyWater": {
            "type": "integer",
            "example": 1.5
          }
        },
        "minItems": 1,
        "required": []
      },
      "AddWaterData": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "19-05-2024"
          },
          "amount": {
            "type": "integer",
            "example": 250
          },
          "time": {
            "type": "string",
            "example": "10:30"
          }
        },
        "required": ["amount", "date", "time"]
      },
      "AddWaterDataResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "statusCode": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "664a13ed4598ebceb5f8970a"
              },
              "owner": {
                "type": "string",
                "example": "664a13ed4598ebceb5f8970b"
              },
              "date": {
                "type": "string",
                "example": "2024-05-19"
              },
              "amounts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "integer",
                      "example": 250
                    },
                    "time": {
                      "type": "string",
                      "example": "10:30"
                    },
                    "_id": {
                      "type": "string",
                      "example": "664a13ed4598ebceb5f8970c"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "EditWaterData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "664a13ec9c876a558d0a0de2"
          },
          "amount": {
            "type": "integer",
            "example": 250
          },
          "time": {
            "type": "string",
            "example": "10:30"
          }
        },
        "required": ["amount", "id", "time"]
      },
      "DeleteWaterData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "664a13ec9c876a558d0a0de2"
          }
        },
        "required": ["id"]
      },
      "EditOrDeleteWaterDataResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "664a13ed4598ebceb5f8970a"
              },
              "owner": {
                "type": "string",
                "example": "664a13ed4598ebceb5f8970b"
              },
              "date": {
                "type": "string",
                "example": "2024-05-19"
              },
              "amounts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "integer",
                      "example": 250
                    },
                    "time": {
                      "type": "string",
                      "example": "10:30"
                    },
                    "_id": {
                      "type": "string",
                      "example": "664a13ed4598ebceb5f8970c"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DailyTrackResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "example": 250
            },
            "time": {
              "type": "string",
              "example": "10:30"
            },
            "_id": {
              "type": "string",
              "example": "664a13ed4598ebceb5f8970c"
            }
          }
        }
      },
      "MonthlyTrackResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "664a13ed4598ebceb5f8970c"
                },
                "owner": {
                  "type": "string",
                  "example": "6649e160d0ab8ccdff25bf73"
                },
                "date": {
                  "type": "string",
                  "example": "19-05-2024"
                },
                "amounts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "example": 100
                      },
                      "time": {
                        "type": "string",
                        "example": "17:59"
                      },
                      "_id": {
                        "type": "string",
                        "example": "664a13ed4598ebceb5f8970c"
                      }
                    }
                  }
                }
              }
            }
          },
          "totalAmount": {
            "type": "integer",
            "example": 1500
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Error description"
          }
        }
      },
      "Forbidden": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Error description"
          }
        }
      },
      "EmailAlreadyInUse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Email already in use"
          }
        }
      },
      "ServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Error description"
          }
        }
      },
      "UserNotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User not found"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
